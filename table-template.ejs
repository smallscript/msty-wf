<!DOCTYPE html>
<html>
  <head>
    <style>
      body {
        background-color: #333;
        color: #000;
        font-family: Arial, sans-serif;
        font-size: 20px;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        table-layout: fixed;
      }

      /* Header Row Styles */
      thead {
        background-color: #d8b4fe !important; /* Light purple */
        color: #000;
        font-weight: bold;
      }

      th,
      td {
        padding: 8px;
        text-align: left;
      }

      /* Odd/Even Row Alternation */
      tr:nth-child(even) {
        background-color: #c1d4ff; /* Pastel blue */
      }

      tr:nth-child(odd) {
        background-color: #fff5cc; /* Pastel yellow */
      }

      .sort-asc::after {
        content: ' ▲';
        color: #00a500; /* Green */
        font-weight: bold;
      }

      .sort-desc::after {
        content: ' ▼';
        color: #00a500; /* Green */
        font-weight: bold;
      }
    </style>

    <script>
      function sortTable(columnIndex) {
        const table = document.getElementById('myTable');
        const headerRow = table.tHead.rows[0];
        const rows = Array.from(table.tBodies[0].rows);
        const isAscending = headerRow.cells[columnIndex].classList.contains('sort-asc');

        rows.sort(function (a, b) {
          const cellA = a.cells[columnIndex].textContent.trim();
          const cellB = b.cells[columnIndex].textContent.trim();

          if (isNaN(cellA) || isNaN(cellB)) {
            return cellA.localeCompare(cellB);
          } else {
            return parseFloat(cellA) - parseFloat(cellB);
          }
        });

        if (!isAscending) {
          rows.reverse();
        }

        table.tBodies[0].innerHTML = '';
        rows.forEach(function (row) {
          table.tBodies[0].appendChild(row);
        });

        // Reset header row styles and remove sort classes
        for (let i = 0; i < headerRow.cells.length; i++) {
          headerRow.cells[i].classList.remove('sort-asc');
          headerRow.cells[i].classList.remove('sort-desc');
        }

        // Set sorted column header style
        headerRow.cells[columnIndex].classList.add(isAscending ? 'sort-desc' : 'sort-asc');
      }
    </script>
  </head>
  <body>
    <table id="myTable">
      <!-- Header Row -->
      <thead>
        <tr>
          <th onclick="sortTable(0)">Filename</th>
          <th onclick="sortTable(1)">Path</th>
          <th onclick="sortTable(2)">Status</th>
        </tr>
      </thead>
      <tbody>
        <% files.forEach(function(file, index) { %>
          <tr>
            <td><%= file.filename %></td>
            <td><%= file.path %></td>
            <td><%= file.status %></td>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <script>
      // Initialize the sort direction classes for the first column
      const headerRow = document.getElementById('myTable').tHead.rows[0];
      headerRow.cells[0].classList.add('sort-asc');
    </script>
  </body>
</html>
